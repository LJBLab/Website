---
import { Icon } from 'astro-icon/components';

interface ContactChannel {
  name: string;
  icon: string;
  label: string;
  value: string;
  href: string;
  color: string;
}

const contactChannels: ContactChannel[] = [
  {
    name: 'email',
    icon: 'tabler:mail',
    label: 'Email',
    value: 'lincoln@ljblab.dev',
    href: 'mailto:lincoln@ljblab.dev',
    color: 'blue'
  },
  {
    name: 'linkedin',
    icon: 'tabler:brand-linkedin',
    label: 'LinkedIn',
    value: 'Lincoln Bicalho',
    href: 'https://www.linkedin.com/in/lincoln-bicalho/',
    color: 'blue'
  },
  {
    name: 'github',
    icon: 'tabler:brand-github',
    label: 'GitHub',
    value: '@lincolnbicalho',
    href: 'https://github.com/lincolnbicalho',
    color: 'gray'
  }
];

const qualifyingQuestions = {
  projectType: [
    { value: 'ai-ml', label: 'AI/ML Solution', icon: 'tabler:brain' },
    { value: 'platform', label: 'Platform Development', icon: 'tabler:apps' },
    { value: 'modernization', label: 'System Modernization', icon: 'tabler:refresh' },
    { value: 'consulting', label: 'Technical Consulting', icon: 'tabler:bulb' },
    { value: 'fractional-cto', label: 'Fractional CTO', icon: 'tabler:user-check' }
  ],
  timeline: [
    { value: 'immediate', label: 'Immediate (This month)' },
    { value: '1-3months', label: '1-3 months' },
    { value: '3-6months', label: '3-6 months' },
    { value: 'planning', label: 'Planning phase' }
  ],
  budget: [
    { value: 'under-25k', label: 'Under $25k' },
    { value: '25-50k', label: '$25k - $50k' },
    { value: '50-100k', label: '$50k - $100k' },
    { value: 'over-100k', label: '$100k+' },
    { value: 'ongoing', label: 'Ongoing monthly' }
  ],
  companySize: [
    { value: 'startup', label: 'Startup (1-10)' },
    { value: 'small', label: 'Small (11-50)' },
    { value: 'medium', label: 'Medium (51-200)' },
    { value: 'enterprise', label: 'Enterprise (200+)' },
    { value: 'government', label: 'Government/NGO' }
  ]
};
---

<section id="contact" class="py-20 px-4 mx-auto max-w-7xl relative overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-5 dark:opacity-10">
    <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%239333ea\" fill-opacity=\"0.3\"%3E%3Cpath d=\"M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>
  </div>

  <!-- Section Header -->
  <div class="text-center mb-16 relative z-10 scroll-fade-in">
    <p class="text-sm font-semibold text-purple-600 dark:text-purple-400 uppercase tracking-wide mb-2">
      Let's Build Together
    </p>
    <h2 class="text-4xl md:text-5xl font-bold mb-4 text-gray-900 dark:text-white">
      Start Your Parallel Innovation Journey
    </h2>
    <p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
      Whether you need AI expertise, platform architecture, or strategic guidanceâ€”let's explore how parallel innovation can transform your challenges into opportunities.
    </p>
  </div>

  <div class="grid lg:grid-cols-2 gap-12 relative z-10">
    <!-- Left: Contact Form -->
    <div class="scroll-slide-up">
      <div class="bg-white dark:bg-gray-800/50 rounded-3xl p-8 shadow-2xl border border-gray-200 dark:border-gray-700">
        <!-- Form Header -->
        <div class="mb-8">
          <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
            Schedule Your Free Strategy Session
          </h3>
          <p class="text-gray-600 dark:text-gray-400">
            30-minute consultation to explore your challenges and opportunities
          </p>
          <div class="flex items-center gap-2 mt-4">
            <Icon name="tabler:clock" class="w-5 h-5 text-green-500" />
            <span class="text-sm text-gray-600 dark:text-gray-400">
              Typically responds within 48 hours
            </span>
          </div>
        </div>

        <!-- Multi-Step Form -->
        <form id="contact-form" class="space-y-6">
          <!-- Step 1: Basic Info -->
          <div id="step-1" class="form-step">
            <div class="grid md:grid-cols-2 gap-4">
              <div>
                <label for="name" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                  Your Name *
                </label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                  placeholder="John Smith"
                />
              </div>
              <div>
                <label for="email" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                  Email Address *
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                  placeholder="john@company.com"
                />
              </div>
            </div>
            
            <div class="mt-4">
              <label for="company" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                Company
              </label>
              <input
                type="text"
                id="company"
                name="company"
                class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                placeholder="Acme Corp"
              />
            </div>
          </div>

          <!-- Step 2: Project Type -->
          <div id="step-2" class="form-step hidden">
            <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-4">
              What type of project are you considering? *
            </label>
            <div class="grid md:grid-cols-2 gap-3">
              {qualifyingQuestions.projectType.map((type) => (
                <label class="project-type-option relative flex items-center gap-3 p-4 rounded-xl border-2 border-gray-200 dark:border-gray-700 hover:border-purple-500 dark:hover:border-purple-500 cursor-pointer transition-all">
                  <input
                    type="radio"
                    name="projectType"
                    value={type.value}
                    class="sr-only"
                    required
                  />
                  <div class="flex items-center gap-3 flex-1">
                    <Icon name={type.icon} class="w-6 h-6 text-purple-600 dark:text-purple-400" />
                    <span class="text-gray-900 dark:text-white font-medium">{type.label}</span>
                  </div>
                  <div class="check-circle hidden">
                    <Icon name="tabler:circle-check" class="w-5 h-5 text-purple-600" />
                  </div>
                </label>
              ))}
            </div>
          </div>

          <!-- Step 3: Qualifiers -->
          <div id="step-3" class="form-step hidden">
            <div class="space-y-4">
              <!-- Timeline -->
              <div>
                <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                  Project Timeline *
                </label>
                <select
                  name="timeline"
                  required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                >
                  <option value="">Select timeline...</option>
                  {qualifyingQuestions.timeline.map((option) => (
                    <option value={option.value}>{option.label}</option>
                  ))}
                </select>
              </div>

              <!-- Budget -->
              <div>
                <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                  Budget Range *
                </label>
                <select
                  name="budget"
                  required
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                >
                  <option value="">Select budget...</option>
                  {qualifyingQuestions.budget.map((option) => (
                    <option value={option.value}>{option.label}</option>
                  ))}
                </select>
              </div>

              <!-- Company Size -->
              <div>
                <label class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
                  Company Size
                </label>
                <select
                  name="companySize"
                  class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all"
                >
                  <option value="">Select size...</option>
                  {qualifyingQuestions.companySize.map((option) => (
                    <option value={option.value}>{option.label}</option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          <!-- Step 4: Message -->
          <div id="step-4" class="form-step hidden">
            <label for="message" class="block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-2">
              Tell me about your project *
            </label>
            <textarea
              id="message"
              name="message"
              rows="5"
              required
              class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all resize-none"
              placeholder="Describe your challenges, goals, and what success looks like for this project..."
            ></textarea>
            
            <div class="mt-4">
              <label class="flex items-start gap-3">
                <input
                  type="checkbox"
                  name="newsletter"
                  class="mt-1 rounded border-gray-300 dark:border-gray-600 text-purple-600 focus:ring-purple-500"
                />
                <span class="text-sm text-gray-600 dark:text-gray-400">
                  Send me insights on parallel innovation and AI trends (monthly, unsubscribe anytime)
                </span>
              </label>
            </div>
          </div>

          <!-- Form Navigation -->
          <div class="flex justify-between items-center pt-6 border-t border-gray-200 dark:border-gray-700">
            <button
              type="button"
              id="prev-btn"
              class="hidden px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors"
            >
              <span class="flex items-center gap-2">
                <Icon name="tabler:arrow-left" class="w-4 h-4" />
                Previous
              </span>
            </button>
            
            <div class="flex items-center gap-2 mx-auto" id="step-indicators">
              <span class="step-dot w-2 h-2 rounded-full bg-purple-600"></span>
              <span class="step-dot w-2 h-2 rounded-full bg-gray-300 dark:bg-gray-600"></span>
              <span class="step-dot w-2 h-2 rounded-full bg-gray-300 dark:bg-gray-600"></span>
              <span class="step-dot w-2 h-2 rounded-full bg-gray-300 dark:bg-gray-600"></span>
            </div>
            
            <button
              type="button"
              id="next-btn"
              class="px-6 py-3 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-full font-semibold hover:from-purple-700 hover:to-blue-700 transition-all"
            >
              <span class="flex items-center gap-2">
                Next
                <Icon name="tabler:arrow-right" class="w-4 h-4" />
              </span>
            </button>
            
            <button
              type="submit"
              id="submit-btn"
              class="hidden px-6 py-3 bg-gradient-to-r from-purple-600 to-blue-600 text-white rounded-full font-semibold hover:from-purple-700 hover:to-blue-700 transition-all"
            >
              <span class="flex items-center gap-2">
                Schedule Strategy Session
                <Icon name="tabler:send" class="w-4 h-4" />
              </span>
            </button>
          </div>
        </form>

        <!-- Success Message (hidden by default) -->
        <div id="success-message" class="hidden">
          <div class="text-center py-12">
            <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-green-100 dark:bg-green-900/30 mb-4">
              <Icon name="tabler:check" class="w-8 h-8 text-green-600 dark:text-green-400" />
            </div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
              Message Sent Successfully!
            </h3>
            <p class="text-gray-600 dark:text-gray-400 mb-6">
              I'll review your project details and respond within 48 hours with next steps.
            </p>
            <a
              href="/"
              class="inline-flex items-center gap-2 text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 font-semibold"
            >
              <Icon name="tabler:arrow-left" class="w-4 h-4" />
              Back to Home
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Right: Contact Info & Trust Signals -->
    <div class="space-y-8 scroll-slide-up" style="animation-delay: 0.1s">
      <!-- Quick Contact Options -->
      <div class="bg-gradient-to-br from-purple-50 to-blue-50 dark:from-purple-950/20 dark:to-blue-950/20 rounded-3xl p-8 border-2 border-purple-200 dark:border-purple-800/50">
        <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
          Direct Contact Channels
        </h3>
        <div class="space-y-4">
          {contactChannels.map((channel) => (
            <a
              href={channel.href}
              target={channel.name !== 'email' ? '_blank' : undefined}
              rel={channel.name !== 'email' ? 'noopener noreferrer' : undefined}
              class="flex items-center gap-4 p-4 bg-white dark:bg-gray-900/30 rounded-xl hover:shadow-lg transition-all group"
            >
              <div class={`p-3 rounded-lg bg-${channel.color}-100 dark:bg-${channel.color}-900/30 group-hover:scale-110 transition-transform`}>
                <Icon name={channel.icon} class={`w-6 h-6 text-${channel.color}-600 dark:text-${channel.color}-400`} />
              </div>
              <div>
                <div class="text-sm text-gray-600 dark:text-gray-400">{channel.label}</div>
                <div class="font-semibold text-gray-900 dark:text-white">{channel.value}</div>
              </div>
              <Icon name="tabler:external-link" class="w-4 h-4 text-gray-400 ml-auto opacity-0 group-hover:opacity-100 transition-opacity" />
            </a>
          ))}
        </div>
      </div>

      <!-- Why Schedule a Call -->
      <div class="bg-white dark:bg-gray-800/50 rounded-2xl p-8 border border-gray-200 dark:border-gray-700">
        <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-6">
          What Happens in Your Strategy Session
        </h3>
        <div class="space-y-4">
          <div class="flex items-start gap-3">
            <div class="mt-1">
              <Icon name="tabler:circle-check" class="w-5 h-5 text-green-500" />
            </div>
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white">Understand Your Challenge</h4>
              <p class="text-sm text-gray-600 dark:text-gray-400">We'll dive deep into your specific needs and goals</p>
            </div>
          </div>
          <div class="flex items-start gap-3">
            <div class="mt-1">
              <Icon name="tabler:circle-check" class="w-5 h-5 text-green-500" />
            </div>
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white">Explore Solutions</h4>
              <p class="text-sm text-gray-600 dark:text-gray-400">I'll share relevant case studies and potential approaches</p>
            </div>
          </div>
          <div class="flex items-start gap-3">
            <div class="mt-1">
              <Icon name="tabler:circle-check" class="w-5 h-5 text-green-500" />
            </div>
            <div>
              <h4 class="font-semibold text-gray-900 dark:text-white">Define Next Steps</h4>
              <p class="text-sm text-gray-600 dark:text-gray-400">Clear action plan whether we work together or not</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Trust Indicators -->
      <div class="grid grid-cols-2 gap-4">
        <div class="text-center p-4 bg-gray-50 dark:bg-gray-800/30 rounded-xl">
          <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">100%</div>
          <div class="text-xs text-gray-600 dark:text-gray-400">Project Success Rate</div>
        </div>
        <div class="text-center p-4 bg-gray-50 dark:bg-gray-800/30 rounded-xl">
          <div class="text-2xl font-bold text-green-600 dark:text-green-400">48hr</div>
          <div class="text-xs text-gray-600 dark:text-gray-400">Response Time</div>
        </div>
        <div class="text-center p-4 bg-gray-50 dark:bg-gray-800/30 rounded-xl">
          <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">3</div>
          <div class="text-xs text-gray-600 dark:text-gray-400">Current Ventures</div>
        </div>
        <div class="text-center p-4 bg-gray-50 dark:bg-gray-800/30 rounded-xl">
          <div class="text-2xl font-bold text-amber-600 dark:text-amber-400">10+</div>
          <div class="text-xs text-gray-600 dark:text-gray-400">Years Experience</div>
        </div>
      </div>

      <!-- Testimonial Preview -->
      <div class="bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-950/20 dark:to-emerald-950/20 rounded-2xl p-6 border border-green-200 dark:border-green-800/50">
        <Icon name="tabler:quote" class="w-8 h-8 text-green-400 mb-3" />
        <blockquote class="text-gray-700 dark:text-gray-300 mb-4">
          "Lincoln doesn't just build featuresâ€”he builds systems that scale. Our 32% cost reduction wasn't luck, it was systematic."
        </blockquote>
        <div class="flex items-center gap-3">
          <div class="w-10 h-10 rounded-full bg-gradient-to-br from-green-400 to-green-600 flex items-center justify-center text-white font-bold">
            EZ
          </div>
          <div>
            <div class="font-semibold text-gray-900 dark:text-white">Eder Zanetti</div>
            <div class="text-sm text-gray-600 dark:text-gray-400">PreventX AI</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .project-type-option:has(input:checked) {
    @apply border-purple-500 bg-purple-50 dark:bg-purple-950/20;
  }
  
  .project-type-option:has(input:checked) .check-circle {
    @apply block;
  }
  
  .form-step {
    animation: fadeIn 0.3s ease-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const steps = document.querySelectorAll('.form-step');
    const stepDots = document.querySelectorAll('.step-dot');
    const prevBtn = document.getElementById('prev-btn') as HTMLButtonElement;
    const nextBtn = document.getElementById('next-btn') as HTMLButtonElement;
    const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement;
    const successMessage = document.getElementById('success-message');
    
    let currentStep = 0;
    
    function showStep(stepIndex: number) {
      steps.forEach((step, index) => {
        step.classList.toggle('hidden', index !== stepIndex);
      });
      
      stepDots.forEach((dot, index) => {
        if (index === stepIndex) {
          dot.classList.remove('bg-gray-300', 'dark:bg-gray-600');
          dot.classList.add('bg-purple-600');
        } else if (index < stepIndex) {
          dot.classList.remove('bg-gray-300', 'dark:bg-gray-600');
          dot.classList.add('bg-purple-600');
        } else {
          dot.classList.remove('bg-purple-600');
          dot.classList.add('bg-gray-300', 'dark:bg-gray-600');
        }
      });
      
      prevBtn.classList.toggle('hidden', stepIndex === 0);
      nextBtn.classList.toggle('hidden', stepIndex === steps.length - 1);
      submitBtn.classList.toggle('hidden', stepIndex !== steps.length - 1);
    }
    
    function validateStep(stepIndex: number): boolean {
      const currentStepEl = steps[stepIndex];
      const inputs = currentStepEl.querySelectorAll('input[required], select[required], textarea[required]');
      
      for (const input of inputs) {
        if (input instanceof HTMLInputElement) {
          if (input.type === 'radio') {
            const radioGroup = currentStepEl.querySelectorAll(`input[name="${input.name}"]`);
            const isChecked = Array.from(radioGroup).some((radio: any) => radio.checked);
            if (!isChecked) return false;
          } else if (!input.value.trim()) {
            return false;
          }
        } else if (input instanceof HTMLSelectElement || input instanceof HTMLTextAreaElement) {
          if (!input.value.trim()) return false;
        }
      }
      
      return true;
    }
    
    nextBtn.addEventListener('click', () => {
      if (validateStep(currentStep)) {
        if (currentStep < steps.length - 1) {
          currentStep++;
          showStep(currentStep);
        }
      } else {
        // Highlight required fields
        const currentStepEl = steps[currentStep];
        const inputs = currentStepEl.querySelectorAll('input[required], select[required], textarea[required]');
        inputs.forEach(input => {
          if (input instanceof HTMLInputElement && input.type === 'radio') {
            const radioGroup = currentStepEl.querySelectorAll(`input[name="${input.name}"]`);
            const isChecked = Array.from(radioGroup).some((radio: any) => radio.checked);
            if (!isChecked) {
              input.closest('.project-type-option')?.classList.add('border-red-500');
            }
          } else if (!input.value.trim()) {
            input.classList.add('border-red-500');
          }
        });
      }
    });
    
    prevBtn.addEventListener('click', () => {
      if (currentStep > 0) {
        currentStep--;
        showStep(currentStep);
      }
    });
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      if (!validateStep(currentStep)) {
        return;
      }
      
      // Collect form data
      const formData = new FormData(form);
      const data = Object.fromEntries(formData);
      
      // Format email body
      const emailBody = `
New Strategy Session Request

Contact Information:
- Name: ${data.name}
- Email: ${data.email}
- Company: ${data.company || 'Not provided'}

Project Details:
- Type: ${data.projectType}
- Timeline: ${data.timeline}
- Budget: ${data.budget}
- Company Size: ${data.companySize || 'Not provided'}

Message:
${data.message}

Newsletter: ${data.newsletter ? 'Yes' : 'No'}
      `.trim();
      
      // Create mailto link
      const subject = encodeURIComponent(`Strategy Session Request from ${data.name}`);
      const body = encodeURIComponent(emailBody);
      const mailtoLink = `mailto:lincoln@ljblab.dev?subject=${subject}&body=${body}`;
      
      // Open email client
      window.location.href = mailtoLink;
      
      // Show success message
      form.classList.add('hidden');
      successMessage?.classList.remove('hidden');
    });
    
    // Remove error styling on input
    form.addEventListener('input', (e) => {
      const target = e.target as HTMLElement;
      target.classList.remove('border-red-500');
      target.closest('.project-type-option')?.classList.remove('border-red-500');
    });
  });
</script>